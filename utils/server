#!/usr/bin/env python3

import socket
import os
import json


class Conn:
    def __init__(self):
        self.status = bool()
        self.msg = str()
        self.ip = '127.0.0.1'
        self.port = 65432
        self.consock = (self.ip, self.port)
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)

    def disconnect(self):
        self.sock.shutdown(socket.SHUT_RDWR)
        self.sock.close()

    def connect(self):
        # Client side
        self.sock.connect(self.consock)

    def bind(self):
        # Server side
        self.sock.bind(self.consock)

    def recv(self):
        self.msg = self.sock.recv(1024)
        return self.msg


# ############################### Carga de credenciales ################################
HOME = os.popen("echo $HOME").read().strip()
os.chdir("{}/.config".format(HOME))
if "DarthsVault" in os.listdir():
    os.chdir("DarthsVault")
else:
    os.mkdir("DarthsVault")
    os.chdir("DarthsVault")

if not ("account" in os.listdir()):
    F = open("account", "w+")
    F.close()
    account = {"acc": [{}]}

F = open("account", "r")
try:
    account = json.load(F)
except json.decoder.JSONDecodeError:
    F.close()
    account = {"acc": [{}]}
del F

# ############################### Conexión ################################
Conn = Conn()
Conn.bind()
Conn.sock.listen()

# ############################### Body del server ################################
while True:
    client, address = Conn.sock.accept()
    print("Conexión con {} establecida".format(address))
    msg = client.recv(1024)
    # ############################### Inicio de sesión ################################
    if msg == b"lo":
        print("LOGIN order catched.")
        if account["acc"][0] == {}:
            # ############################### Registro ################################
            client.send(b"n-n")
            print("Registering a new user.")
            NAME = client.recv(1024)
            print("Received NAME and setted as {}".format(NAME.decode("utf-8")))
            client.send(b"p-n")
            PASS = client.recv(1024)
            print("Received PASS and setted as {}".format(PASS.decode("utf-8")))
            account["acc"][0]["NAME"] = NAME.decode("utf-8")
            account["acc"][0]["PASS"] = PASS.decode("utf-8")
            account["acc"][0]["MONEY"] = {"propio": 0, "prestado": 0, "reservado": 0, "pend": 0}
            data = json.dumps(account, indent=4)
            F = open("account", "w")
            F.write(data)
            print("Wrote data.")
            client.send(b"1")
        else:
            # ############################### Usuario existente ################################
            client.send(b"n")
            print("Loging in with an existing user.")
            while True:
                NAME = client.recv(1024)
                print("Received NAME {}.".format(NAME.decode("utf-8")))
                if NAME.decode("utf-8") == account["acc"][0]["NAME"]:
                    print("NAME is correct.")
                    client.send(b"1")
                else:
                    print("NAME does not exist. Retrying.")
                    client.send(b"0")
                    continue
                PASS = client.recv(1024)
                print("Received PASS {}.".format(PASS.decode("utf-8")))
                if PASS.decode("utf-8") == account["acc"][0]["PASS"]:
                    print("PASS is correct.")
                    client.send(b"1")
                    print("{} has logged in.".format(NAME.decode("utf-8")))
                    break
                else:
                    print("PASS is incorrect. Retrying.")
                    client.send(b"0")
                    continue

    if msg == b"pa":
        # ############################### Sesión iniciada ################################
        NAME = bytes(account["acc"][0]["NAME"], "utf-8")
        PASS = bytes(account["acc"][0]["PASS"], "utf-8")

    while True:
        # ############################### Home ################################
        SECT = client.recv(1024)
        if SECT == b"1":
            # ############################### Sección Dinero ################################
            print("Selected section: DINERO")
            client.send(b"1")
            while True:
                msg = client.recv(1024)
                if msg == b"propio":
                    client.send(bytes(str(account["acc"][0]["MONEY"]["propio"]), "utf-8"))
                    continue
                elif msg == b"prestado":
                    client.send(bytes(str(account["acc"][0]["MONEY"]["prestado"]), "utf-8"))
                    continue
                elif msg == b"reservado":
                    client.send(bytes(str(account["acc"][0]["MONEY"]["reservado"]), "utf-8"))
                    continue
                elif msg == b"pend":
                    client.send(bytes(str(account["acc"][0]["MONEY"]["pend"]), "utf-8"))
                    continue
                elif msg == b"break":
                    break
        else:
            client.send(b"0")
            continue
